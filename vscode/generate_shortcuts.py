import os
import json5

with open(os.path.expanduser("~/.config/Code/User/keybindings.json"), "r") as f:
    key_bindings = json5.load(f)


def format_key(key: str) -> str:
    return key.replace("+", "-").replace("meta", "super")


def create_rule(
    key: str, code_command: str, talon_rule: str, name: str, require_prefix: bool
) -> str:
    key_combos = format_key(key).split(" ")
    nl = "\n"
    return f"""
#{" " + code_command + f" ({name})" if name else " " + code_command}
^{"code" if require_prefix else "[code]"} {talon_rule}:
{nl.join(f"    key({key_combo})" for key_combo in key_combos)}
    """


talon_script = """# Generated by local script

app: code

-
"""
for binding in key_bindings:
    key = binding["key"]
    code_command = binding.get("command")
    custom_metadata = binding.get("customMetadata", {}) or {}
    talon_data = custom_metadata.get("talon") or {}
    talon_rule = talon_data.get("rule")
    talon_name = talon_data.get("name")
    talon_require_prefix = talon_data.get("requirePrefix", False)

    if key and talon_rule:
        talon_script += f"{create_rule(key, code_command, talon_rule, talon_name, talon_require_prefix)}"

with open(
    os.path.join(
        os.path.dirname(os.path.abspath(__file__)), "generated_code_shortcuts.talon"
    ),
    "w",
) as f:
    f.write(talon_script)
